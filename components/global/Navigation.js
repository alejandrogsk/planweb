import React, { useEffect, useRef } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
const Logo = () => {

    return(
        // <Link href="/">
        // <img style={{cursor:"pointer"}} src="/logo.png" alt="smooth design logo" />
        // </Link>

        <Link href="/">
            <a className="logo">
            <svg width="208" height="19" viewBox="0 0 208 19" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M6.84424 18.175C5.62757 18.175 4.52757 17.9667 3.54424 17.55C2.57757 17.1333 1.81091 16.5333 1.24424 15.75C0.677572 14.9667 0.385905 14.0417 0.369238 12.975H4.11924C4.16924 13.6917 4.41924 14.2583 4.86924 14.675C5.33591 15.0917 5.96924 15.3 6.76924 15.3C7.58591 15.3 8.22757 15.1083 8.69424 14.725C9.16091 14.325 9.39424 13.8083 9.39424 13.175C9.39424 12.6583 9.23591 12.2333 8.91924 11.9C8.60257 11.5667 8.20257 11.3083 7.71924 11.125C7.25257 10.925 6.60257 10.7083 5.76924 10.475C4.63591 10.1417 3.71091 9.81667 2.99424 9.5C2.29424 9.16667 1.68591 8.675 1.16924 8.025C0.669238 7.35833 0.419238 6.475 0.419238 5.375C0.419238 4.34167 0.677572 3.44167 1.19424 2.675C1.71091 1.90833 2.43591 1.325 3.36924 0.924999C4.30257 0.508333 5.36924 0.3 6.56924 0.3C8.36924 0.3 9.82757 0.741666 10.9442 1.625C12.0776 2.49167 12.7026 3.70833 12.8192 5.275H8.96924C8.93591 4.675 8.67757 4.18333 8.19424 3.8C7.72757 3.4 7.10257 3.2 6.31924 3.2C5.63591 3.2 5.08591 3.375 4.66924 3.725C4.26924 4.075 4.06924 4.58333 4.06924 5.25C4.06924 5.71667 4.21924 6.10833 4.51924 6.425C4.83591 6.725 5.21924 6.975 5.66924 7.175C6.13591 7.35833 6.78591 7.575 7.61924 7.825C8.75257 8.15833 9.67757 8.49167 10.3942 8.825C11.1109 9.15833 11.7276 9.65833 12.2442 10.325C12.7609 10.9917 13.0192 11.8667 13.0192 12.95C13.0192 13.8833 12.7776 14.75 12.2942 15.55C11.8109 16.35 11.1026 16.9917 10.1692 17.475C9.23591 17.9417 8.12757 18.175 6.84424 18.175ZM35.3286 0.55V18H31.8286V6.65L27.1536 18H24.5036L19.8036 6.65V18H16.3036V0.55H20.2786L25.8286 13.525L31.3786 0.55H35.3286ZM47.139 18.175C45.5056 18.175 44.0056 17.7917 42.639 17.025C41.2723 16.2583 40.189 15.2 39.389 13.85C38.589 12.4833 38.189 10.9417 38.189 9.225C38.189 7.525 38.589 6 39.389 4.65C40.189 3.28333 41.2723 2.21667 42.639 1.45C44.0056 0.683333 45.5056 0.3 47.139 0.3C48.789 0.3 50.289 0.683333 51.639 1.45C53.0056 2.21667 54.0806 3.28333 54.864 4.65C55.664 6 56.064 7.525 56.064 9.225C56.064 10.9417 55.664 12.4833 54.864 13.85C54.0806 15.2 53.0056 16.2583 51.639 17.025C50.2723 17.7917 48.7723 18.175 47.139 18.175ZM47.139 15.05C48.189 15.05 49.114 14.8167 49.914 14.35C50.714 13.8667 51.339 13.1833 51.789 12.3C52.239 11.4167 52.464 10.3917 52.464 9.225C52.464 8.05833 52.239 7.04167 51.789 6.175C51.339 5.29167 50.714 4.61667 49.914 4.15C49.114 3.68333 48.189 3.45 47.139 3.45C46.089 3.45 45.1556 3.68333 44.339 4.15C43.539 4.61667 42.914 5.29167 42.464 6.175C42.014 7.04167 41.789 8.05833 41.789 9.225C41.789 10.3917 42.014 11.4167 42.464 12.3C42.914 13.1833 43.539 13.8667 44.339 14.35C45.1556 14.8167 46.089 15.05 47.139 15.05ZM67.0179 18.175C65.3845 18.175 63.8845 17.7917 62.5179 17.025C61.1512 16.2583 60.0679 15.2 59.2679 13.85C58.4679 12.4833 58.0679 10.9417 58.0679 9.225C58.0679 7.525 58.4679 6 59.2679 4.65C60.0679 3.28333 61.1512 2.21667 62.5179 1.45C63.8845 0.683333 65.3845 0.3 67.0179 0.3C68.6679 0.3 70.1679 0.683333 71.5179 1.45C72.8845 2.21667 73.9595 3.28333 74.7429 4.65C75.5429 6 75.9429 7.525 75.9429 9.225C75.9429 10.9417 75.5429 12.4833 74.7429 13.85C73.9595 15.2 72.8845 16.2583 71.5179 17.025C70.1512 17.7917 68.6512 18.175 67.0179 18.175ZM67.0179 15.05C68.0679 15.05 68.9929 14.8167 69.7929 14.35C70.5929 13.8667 71.2179 13.1833 71.6679 12.3C72.1179 11.4167 72.3429 10.3917 72.3429 9.225C72.3429 8.05833 72.1179 7.04167 71.6679 6.175C71.2179 5.29167 70.5929 4.61667 69.7929 4.15C68.9929 3.68333 68.0679 3.45 67.0179 3.45C65.9679 3.45 65.0345 3.68333 64.2179 4.15C63.4179 4.61667 62.7929 5.29167 62.3429 6.175C61.8929 7.04167 61.6679 8.05833 61.6679 9.225C61.6679 10.3917 61.8929 11.4167 62.3429 12.3C62.7929 13.1833 63.4179 13.8667 64.2179 14.35C65.0345 14.8167 65.9679 15.05 67.0179 15.05ZM90.6718 0.55V3.375H86.0218V18H82.5218V3.375H77.8718V0.55H90.6718ZM107.95 0.55V18H104.45V10.575H96.9755V18H93.4755V0.55H96.9755V7.725H104.45V0.55H107.95Z" fill="black"/>
<path d="M117.745 0.55C119.579 0.55 121.187 0.908333 122.57 1.625C123.97 2.34167 125.045 3.36667 125.795 4.7C126.562 6.01667 126.945 7.55 126.945 9.3C126.945 11.05 126.562 12.5833 125.795 13.9C125.045 15.2 123.97 16.2083 122.57 16.925C121.187 17.6417 119.579 18 117.745 18H111.645V0.55H117.745ZM117.62 15.025C119.454 15.025 120.87 14.525 121.87 13.525C122.87 12.525 123.37 11.1167 123.37 9.3C123.37 7.48333 122.87 6.06667 121.87 5.05C120.87 4.01667 119.454 3.5 117.62 3.5H115.145V15.025H117.62ZM133.315 3.375V7.75H139.19V10.525H133.315V15.15H139.94V18H129.815V0.524998H139.94V3.375H133.315ZM149.396 18.175C148.179 18.175 147.079 17.9667 146.096 17.55C145.129 17.1333 144.363 16.5333 143.796 15.75C143.229 14.9667 142.938 14.0417 142.921 12.975H146.671C146.721 13.6917 146.971 14.2583 147.421 14.675C147.888 15.0917 148.521 15.3 149.321 15.3C150.138 15.3 150.779 15.1083 151.246 14.725C151.713 14.325 151.946 13.8083 151.946 13.175C151.946 12.6583 151.788 12.2333 151.471 11.9C151.154 11.5667 150.754 11.3083 150.271 11.125C149.804 10.925 149.154 10.7083 148.321 10.475C147.188 10.1417 146.263 9.81667 145.546 9.5C144.846 9.16667 144.238 8.675 143.721 8.025C143.221 7.35833 142.971 6.475 142.971 5.375C142.971 4.34167 143.229 3.44167 143.746 2.675C144.263 1.90833 144.988 1.325 145.921 0.924999C146.854 0.508333 147.921 0.3 149.121 0.3C150.921 0.3 152.379 0.741666 153.496 1.625C154.629 2.49167 155.254 3.70833 155.371 5.275H151.521C151.488 4.675 151.229 4.18333 150.746 3.8C150.279 3.4 149.654 3.2 148.871 3.2C148.188 3.2 147.638 3.375 147.221 3.725C146.821 4.075 146.621 4.58333 146.621 5.25C146.621 5.71667 146.771 6.10833 147.071 6.425C147.388 6.725 147.771 6.975 148.221 7.175C148.688 7.35833 149.338 7.575 150.171 7.825C151.304 8.15833 152.229 8.49167 152.946 8.825C153.663 9.15833 154.279 9.65833 154.796 10.325C155.313 10.9917 155.571 11.8667 155.571 12.95C155.571 13.8833 155.329 14.75 154.846 15.55C154.363 16.35 153.654 16.9917 152.721 17.475C151.788 17.9417 150.679 18.175 149.396 18.175ZM162.355 0.55V18H158.855V0.55H162.355ZM178.213 5.8C177.813 5.06667 177.263 4.50833 176.563 4.125C175.863 3.74167 175.047 3.55 174.113 3.55C173.08 3.55 172.163 3.78333 171.363 4.25C170.563 4.71667 169.938 5.38333 169.488 6.25C169.038 7.11667 168.813 8.11667 168.813 9.25C168.813 10.4167 169.038 11.4333 169.488 12.3C169.955 13.1667 170.597 13.8333 171.413 14.3C172.23 14.7667 173.18 15 174.263 15C175.597 15 176.688 14.65 177.538 13.95C178.388 13.2333 178.947 12.2417 179.213 10.975H173.213V8.3H182.663V11.35C182.43 12.5667 181.93 13.6917 181.163 14.725C180.397 15.7583 179.405 16.5917 178.188 17.225C176.988 17.8417 175.638 18.15 174.138 18.15C172.455 18.15 170.93 17.775 169.563 17.025C168.213 16.2583 167.147 15.2 166.363 13.85C165.597 12.5 165.213 10.9667 165.213 9.25C165.213 7.53333 165.597 6 166.363 4.65C167.147 3.28333 168.213 2.225 169.563 1.475C170.93 0.708333 172.447 0.325 174.113 0.325C176.08 0.325 177.788 0.808333 179.238 1.775C180.688 2.725 181.688 4.06667 182.238 5.8H178.213ZM200.428 18H196.928L189.003 6.025V18H185.503V0.524998H189.003L196.928 12.525V0.524998H200.428V18ZM205.687 18.175C205.053 18.175 204.528 17.9833 204.112 17.6C203.712 17.2 203.512 16.7083 203.512 16.125C203.512 15.5417 203.712 15.0583 204.112 14.675C204.528 14.275 205.053 14.075 205.687 14.075C206.303 14.075 206.812 14.275 207.212 14.675C207.612 15.0583 207.812 15.5417 207.812 16.125C207.812 16.7083 207.612 17.2 207.212 17.6C206.812 17.9833 206.303 18.175 205.687 18.175Z" fill="#F84525"/>
</svg>

            </a>
        </Link>
    )
}


const NavigationDesktop = ({ menu, cta }) => {

    const {route} = useRouter();
    //Sticky Navigation
    // const [stickyClass, setStickyClass] = useState('relative');

    // useEffect(() => {
    //   window.addEventListener('scroll', stickNavbar);
  
    //   return () => {
    //     window.removeEventListener('scroll', stickNavbar);
    //   };
    // }, []);
  
    // const stickNavbar = () => {
    //   if (window !== undefined) {
    //     let windowHeight = window.scrollY;
    //     windowHeight > 500 ? setStickyClass('sticky') : setStickyClass('relative');
    //   }
    // };
    
    //Should put ${stickyClass} in Header tag
    //End Sticky navigation

    return (
        <header className={`desktop__header `}>
            <div className="desktop__logo">

            <Logo />

            </div>
            <nav className="desktop__nav">
                <ul>
                    {
                        menu.map((element, i) => (
                            <Link href={element.link} key={i}>
                                <a className={(route === element.link) ? 'underline underline__orange' : ''}>{element.title}</a>
                            </Link>
                        ))
                    } 
                </ul>
            </nav>
            <Link href={cta.link}>
            <a
                className="desktop__cta "
                >
                {cta.title}
            </a>
                </Link>
        </header>
    );
};

const NavigationMobile = ({menu}) => {
    const navigationCheck = useRef(null);



    const handleNav = () => {
        if(navigationCheck.current.checked === true){
            navigationCheck.current.checked=false;
        }
    }


    return (
        <>
            <div className="logo-mobile">
                <Logo />
            </div>

            <div className="navbar__responsive d-n">
                <input
                    ref={navigationCheck}
                    type="checkbox"
                    className="navbar__responsive--checkbox"
                    id="navi-toggle"
                />

                <label
                    htmlFor="navi-toggle"
                    className="navbar__responsive--button"
                >
                    <span className="navbar__responsive--icon">&nbsp;</span>
                </label>

                <div className="navbar__responsive--background">&nbsp;</div>

                <div className="navbar__responsive--nav">
                    <ul className="navbar__responsive--list">
            {
                menu.map((element,i) => (
                        <li key={i} className="navbar__responsive--item">
                            <Link href={element.link}>
                                <a onClick={handleNav} className="navbar__responsive--link">
                                    {element.title}
                                </a>
                            </Link>
                        </li>
                ))
            }
                        
                        <Link href="/contact">
                                <a onClick={handleNav} className="navbar__responsive--link">
                                    Contacto
                                </a>
                            </Link>
                    </ul>
                </div>
            </div>
        </>
    );
};

const Navigation = ({menu, cta}) => {
    return (
        <>
            <NavigationDesktop menu={menu} cta={cta}/>
            <NavigationMobile menu={menu}/>
        </>
    );
};

export default Navigation;