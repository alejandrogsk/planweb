import React, { useEffect, useRef } from "react";
import Link from "next/link";
import { useRouter } from "next/router";
const Logo = () => {

    return(
        // <Link href="/">
        // <img style={{cursor:"pointer"}} src="/logo.png" alt="smooth design logo" />
        // </Link>

//         <Link href="/">
//             <a className="logo">
//             <svg width="180" height="48" viewBox="0 0 180 48" fill="none" xmlns="http://www.w3.org/2000/svg">
// <path d="M2.2017 39V9.90909H14.2188C16.3968 9.90909 18.2765 10.3352 19.858 11.1875C21.4489 12.0303 22.6752 13.2093 23.5369 14.7244C24.3987 16.2301 24.8295 17.982 24.8295 19.9801C24.8295 21.9877 24.3892 23.7443 23.5085 25.25C22.6373 26.7462 21.392 27.9062 19.7727 28.7301C18.1534 29.554 16.2311 29.9659 14.0057 29.9659H6.59091V24.4261H12.6989C13.7595 24.4261 14.6449 24.2415 15.3551 23.8722C16.0748 23.5028 16.6193 22.9867 16.9886 22.3239C17.358 21.6515 17.5426 20.8703 17.5426 19.9801C17.5426 19.0805 17.358 18.304 16.9886 17.6506C16.6193 16.9877 16.0748 16.4763 15.3551 16.1165C14.6354 15.7566 13.75 15.5767 12.6989 15.5767H9.23295V39H2.2017ZM34.0415 9.90909V39H27.0955V9.90909H34.0415ZM43.4132 39.3693C42.0212 39.3693 40.7854 39.1373 39.7058 38.6733C38.6357 38.1998 37.7882 37.4896 37.1632 36.5426C36.5477 35.5862 36.2399 34.3883 36.2399 32.9489C36.2399 31.7367 36.453 30.714 36.8791 29.8807C37.3053 29.0473 37.8924 28.3703 38.6405 27.8494C39.3886 27.3286 40.2503 26.9356 41.2257 26.6705C42.2011 26.3958 43.2428 26.2112 44.3507 26.1165C45.5912 26.0028 46.5903 25.8845 47.3479 25.7614C48.1054 25.6288 48.6547 25.4441 48.9956 25.2074C49.346 24.9612 49.5212 24.6155 49.5212 24.1705V24.0994C49.5212 23.3703 49.2702 22.8068 48.7683 22.4091C48.2664 22.0114 47.5893 21.8125 46.7371 21.8125C45.8185 21.8125 45.0799 22.0114 44.5212 22.4091C43.9625 22.8068 43.6073 23.3561 43.4558 24.0568L37.0496 23.8295C37.239 22.5038 37.7267 21.3201 38.5126 20.2784C39.3081 19.2273 40.3971 18.4034 41.7797 17.8068C43.1717 17.2008 44.8431 16.8977 46.7939 16.8977C48.1859 16.8977 49.4691 17.0634 50.6433 17.3949C51.8176 17.7169 52.8403 18.1903 53.7115 18.8153C54.5827 19.4309 55.2551 20.1884 55.7286 21.0881C56.2115 21.9877 56.453 23.0152 56.453 24.1705V39H49.9189V35.9602H49.7484C49.3602 36.6989 48.863 37.3239 48.257 37.8352C47.6604 38.3466 46.9549 38.7301 46.1405 38.9858C45.3356 39.2415 44.4265 39.3693 43.4132 39.3693ZM45.5581 34.8239C46.3062 34.8239 46.9786 34.6723 47.5751 34.3693C48.1812 34.0663 48.6642 33.6496 49.024 33.1193C49.3839 32.5795 49.5638 31.9545 49.5638 31.2443V29.1705C49.3649 29.2746 49.1234 29.3693 48.8393 29.4545C48.5647 29.5398 48.2617 29.6203 47.9303 29.696C47.5988 29.7718 47.2579 29.8381 46.9075 29.8949C46.5571 29.9517 46.221 30.0038 45.899 30.0511C45.2456 30.1553 44.6869 30.3163 44.2229 30.5341C43.7683 30.7519 43.4179 31.036 43.1717 31.3864C42.935 31.7273 42.8166 32.1345 42.8166 32.608C42.8166 33.3277 43.0723 33.8769 43.5837 34.2557C44.1045 34.6345 44.7626 34.8239 45.5581 34.8239ZM66.4462 26.5568V39H59.5001V17.1818H66.1053V21.1875H66.3467C66.8297 19.8523 67.6536 18.8059 68.8183 18.0483C69.9831 17.2812 71.3704 16.8977 72.9803 16.8977C74.5143 16.8977 75.8448 17.2434 76.9717 17.9347C78.1081 18.6165 78.9888 19.5729 79.6138 20.804C80.2482 22.0256 80.5607 23.4555 80.5513 25.0938V39H73.6053V26.4574C73.6147 25.2453 73.307 24.2983 72.682 23.6165C72.0664 22.9347 71.2094 22.5938 70.1109 22.5938C69.3818 22.5938 68.7378 22.7547 68.1791 23.0767C67.6299 23.3892 67.2037 23.839 66.9007 24.4261C66.6072 25.0133 66.4556 25.7235 66.4462 26.5568Z" fill="#1A1A1A"/>
// <path d="M90.6261 39L82.1602 9.90909H89.9301L94.3193 28.9716H94.5608L99.575 9.90909H105.91L110.924 29.0142H111.166L115.569 9.90909H123.325L114.873 39H108.098L102.856 21.358H102.629L97.3875 39H90.6261ZM132.807 39.4119C130.525 39.4119 128.555 38.9621 126.898 38.0625C125.25 37.1534 123.981 35.8608 123.091 34.1847C122.21 32.4991 121.77 30.4962 121.77 28.1761C121.77 25.9223 122.215 23.9527 123.105 22.267C123.995 20.572 125.25 19.2557 126.869 18.3182C128.489 17.3712 130.397 16.8977 132.594 16.8977C134.147 16.8977 135.567 17.1392 136.855 17.6222C138.143 18.1051 139.256 18.8201 140.193 19.767C141.131 20.714 141.86 21.8835 142.381 23.2756C142.902 24.6581 143.162 26.2443 143.162 28.0341V29.767H124.199V25.733H136.699C136.689 24.9943 136.514 24.3362 136.173 23.7585C135.832 23.1809 135.364 22.7311 134.767 22.4091C134.18 22.0777 133.503 21.9119 132.736 21.9119C131.959 21.9119 131.263 22.0871 130.648 22.4375C130.032 22.7784 129.545 23.2472 129.185 23.8438C128.825 24.4309 128.635 25.0985 128.616 25.8466V29.9517C128.616 30.8419 128.792 31.6231 129.142 32.2955C129.492 32.9583 129.99 33.4744 130.634 33.8438C131.277 34.2131 132.045 34.3977 132.935 34.3977C133.55 34.3977 134.109 34.3125 134.611 34.142C135.113 33.9716 135.544 33.7206 135.903 33.3892C136.263 33.0578 136.533 32.6506 136.713 32.1676L143.091 32.3523C142.826 33.7822 142.243 35.0275 141.344 36.0881C140.454 37.1392 139.284 37.9583 137.835 38.5455C136.386 39.1231 134.71 39.4119 132.807 39.4119ZM145.51 39V9.90909H152.456V20.9176H152.598C152.882 20.2547 153.284 19.6155 153.805 19C154.335 18.3845 155.008 17.8826 155.822 17.4943C156.646 17.0966 157.631 16.8977 158.777 16.8977C160.292 16.8977 161.707 17.2955 163.024 18.0909C164.349 18.8864 165.42 20.1127 166.234 21.7699C167.048 23.4271 167.456 25.5388 167.456 28.1051C167.456 30.5767 167.063 32.6458 166.277 34.3125C165.5 35.9792 164.449 37.2292 163.123 38.0625C161.807 38.8958 160.344 39.3125 158.734 39.3125C157.635 39.3125 156.684 39.1326 155.879 38.7727C155.074 38.4129 154.397 37.9394 153.848 37.3523C153.308 36.7652 152.891 36.1354 152.598 35.4631H152.385V39H145.51ZM152.313 28.0909C152.313 29.2652 152.47 30.2879 152.782 31.1591C153.104 32.0303 153.563 32.7074 154.16 33.1903C154.766 33.6638 155.491 33.9006 156.333 33.9006C157.186 33.9006 157.91 33.6638 158.507 33.1903C159.103 32.7074 159.553 32.0303 159.856 31.1591C160.169 30.2879 160.325 29.2652 160.325 28.0909C160.325 26.9167 160.169 25.8987 159.856 25.0369C159.553 24.1752 159.103 23.5076 158.507 23.0341C157.92 22.5606 157.195 22.3239 156.333 22.3239C155.481 22.3239 154.757 22.5559 154.16 23.0199C153.563 23.4839 153.104 24.1468 152.782 25.0085C152.47 25.8703 152.313 26.8977 152.313 28.0909ZM173.802 39.4119C172.779 39.4119 171.903 39.0521 171.174 38.3324C170.454 37.6127 170.099 36.7415 170.109 35.7188C170.099 34.715 170.454 33.858 171.174 33.1477C171.903 32.428 172.779 32.0682 173.802 32.0682C174.768 32.0682 175.62 32.428 176.359 33.1477C177.107 33.858 177.485 34.715 177.495 35.7188C177.485 36.4006 177.305 37.0208 176.955 37.5795C176.614 38.1383 176.164 38.5833 175.606 38.9148C175.056 39.2462 174.455 39.4119 173.802 39.4119Z" fill="#F84525"/>
// </svg>


//             </a>
//         </Link>
<Link href="/">
            <a className="cursor-pointer font-poppins font-semibold text-xl md:text-2xl lg:text-3xl text-black text-center">PlanWeb</a>
        </Link>
    )
}


const NavigationDesktop = ({ menu, cta }) => {

    const {route} = useRouter();
    //Sticky Navigation
    // const [stickyClass, setStickyClass] = useState('relative');

    // useEffect(() => {
    //   window.addEventListener('scroll', stickNavbar);
  
    //   return () => {
    //     window.removeEventListener('scroll', stickNavbar);
    //   };
    // }, []);
  
    // const stickNavbar = () => {
    //   if (window !== undefined) {
    //     let windowHeight = window.scrollY;
    //     windowHeight > 500 ? setStickyClass('sticky') : setStickyClass('relative');
    //   }
    // };
    
    //Should put ${stickyClass} in Header tag
    //End Sticky navigation

    return (
        <header className={`desktop__header `}>
            <div className="desktop__logo">
                <Logo />
            </div>

            <nav className="desktop__nav">
                <ul>
                    {
                        menu.map((element, i) => (
                            <Link href={element.link} key={i}>
                                <a >{element.title}</a>
                            </Link>
                        ))
                    } 
                </ul>
            </nav>
        </header>
    );
};

const NavigationMobile = ({menu}) => {
    const navigationCheck = useRef(null);



    const handleNav = () => {
        if(navigationCheck.current.checked === true){
            navigationCheck.current.checked=false;
        }
    }


    return (
        <>
            <div className="logo-mobile">
                <Logo />
            </div>

            <div className="navbar__responsive d-n">
                <input
                    ref={navigationCheck}
                    type="checkbox"
                    className="navbar__responsive--checkbox"
                    id="navi-toggle"
                />

                <label
                    htmlFor="navi-toggle"
                    className="navbar__responsive--button"
                >
                    <span className="navbar__responsive--icon">&nbsp;</span>
                </label>

                <div className="navbar__responsive--background">&nbsp;</div>

                <div className="navbar__responsive--nav">
                    <ul className="navbar__responsive--list">
            {
                menu.map((element,i) => (
                        <li key={i} className="navbar__responsive--item">
                            <Link href={element.link}>
                                <a onClick={handleNav} className="navbar__responsive--link">
                                    {element.title}
                                </a>
                            </Link>
                        </li>
                ))
            }
                        
    
                    </ul>
                </div>
            </div>
        </>
    );
};

const Navigation = ({menu, cta}) => {
    return (
        <>
            <NavigationDesktop menu={menu} cta={cta}/>
            <NavigationMobile menu={menu}/>
        </>
    );
};

export default Navigation;